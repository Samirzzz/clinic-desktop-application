<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>